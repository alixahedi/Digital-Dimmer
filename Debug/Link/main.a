;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;eeprom unsigned int d;
;
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0007   {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0008   //Timer1 Start
; 0000 0009   TCCR1B=(0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000A   //Timer1= &HFFFF -d
; 0000 000B   OCR1AH=(0xFF-d)>>8;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 000C   OCR1AL=(0xFF-d)&0xff;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 000D   }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 0010   {
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0011   //Timer1 Stop
; 0000 0012   TCCR1B=(0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0013   //Timer1 = 0;
; 0000 0014   TCNT1H=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0015   TCNT1L=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0016   //Pulse
; 0000 0017   PORTD.4=0;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0018   delay_us(10);
;PCODE: $0000002B VOL: 0
; 0000 0019   PORTD.4=1;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 001A   }
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;
;void main(void)
; 0000 001D   {
;PCODE: $00000031 VOL: 0
; 0000 001E    // Input/Output Ports initialization
; 0000 001F   DDRD.6=DDRD.7=0;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0020   DDRD.4=1;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0021   // Timer/Counter 1 initialization
; 0000 0022   TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0023   TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0024   OCR1AH=0xFF;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0025   OCR1AL=0xFF;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0026   // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0027   TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (1<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<TOIE0);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0028   // External Interrupt(s) initialization
; 0000 0029   GICR|=(1<<INT1) | (0<<INT0);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 002A   MCUCR=(1<<ISC11) | (1<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 002B   GIFR=(1<<INTF1) | (0<<INTF0);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 002C   // Global enable interrupts
; 0000 002D   #asm("sei")
;PCODE: $00000049 VOL: 0
	sei
;PCODE: $0000004A VOL: 0
; 0000 002E   while (1)
;PCODE: $0000004B VOL: 0
; 0000 002F     {
; 0000 0030     if(PIND.6==0)
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0031       {
; 0000 0032       if(d>=32767)d=32767;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0033       else d=d+100;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0034       while(PIND.6==0);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0035       }
; 0000 0036     if(PIND.7==0)
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0037       {
; 0000 0038       if(d<=200)d=200;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0039       else d=d-100;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 003A       while(PIND.7==0);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 003B       }
; 0000 003C     }
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 003D   }
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
